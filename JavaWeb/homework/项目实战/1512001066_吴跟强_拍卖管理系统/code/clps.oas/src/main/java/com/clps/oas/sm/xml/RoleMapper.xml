<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clps.oas.sm.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.clps.oas.sm.pojo.Role">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_comment" jdbcType="VARCHAR" property="roleComment" />
    <result column="role_level" jdbcType="VARCHAR" property="roleLevel" />
    <result column="role_created_datetime" jdbcType="TIMESTAMP" property="roleCreatedDatetime" />
    <result column="role_created_name" jdbcType="VARCHAR" property="roleCreatedName" />
    <result column="role_updated_datetime" jdbcType="TIMESTAMP" property="roleUpdatedDatetime" />
    <result column="role_updated_name" jdbcType="VARCHAR" property="roleUpdatedName" />
    <result column="role_default1" jdbcType="VARCHAR" property="roleDefault1" />
    <result column="role_default2" jdbcType="VARCHAR" property="roleDefault2" />
    <result column="role_isVaild" jdbcType="INTEGER" property="roleIsvaild" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, role_comment, role_level, role_created_datetime, role_created_name, 
    role_updated_datetime, role_updated_name, role_default1, role_default2, role_isVaild
  </sql>
  <select id="queryRoleByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>

  <select id="queryRoleByRoleName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where role_name = #{roleName,jdbcType=VARCHAR}
  </select>

  <select id="queryAllRoles" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
  </select>
      
  <delete id="deleteByRoleId" parameterType="java.lang.Integer">
    delete from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>

  <insert id="insertRole" parameterType="com.clps.oas.sm.pojo.Role">
    <selectKey keyProperty="roleId" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role (role_id, role_name, role_comment, 
      role_level, role_created_datetime, role_created_name, 
      role_updated_datetime, role_updated_name, 
      role_default1, role_default2, role_isVaild
      )
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleComment,jdbcType=VARCHAR}, 
      #{roleLevel,jdbcType=VARCHAR}, #{roleCreatedDatetime,jdbcType=TIMESTAMP}, #{roleCreatedName,jdbcType=VARCHAR}, 
      #{roleUpdatedDatetime,jdbcType=TIMESTAMP}, #{roleUpdatedName,jdbcType=VARCHAR}, 
      #{roleDefault1,jdbcType=VARCHAR}, #{roleDefault2,jdbcType=VARCHAR}, #{roleIsvaild,jdbcType=INTEGER}
      )
  </insert>
 
  <update id="updateByRoleId" parameterType="com.clps.oas.sm.pojo.Role">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleComment != null">
        role_comment = #{roleComment,jdbcType=VARCHAR},
      </if>
      <if test="roleLevel != null">
        role_level = #{roleLevel,jdbcType=VARCHAR},
      </if>
      <if test="roleCreatedDatetime != null">
        role_created_datetime = #{roleCreatedDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleCreatedName != null">
        role_created_name = #{roleCreatedName,jdbcType=VARCHAR},
      </if>
      <if test="roleUpdatedDatetime != null">
        role_updated_datetime = #{roleUpdatedDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleUpdatedName != null">
        role_updated_name = #{roleUpdatedName,jdbcType=VARCHAR},
      </if>
      <if test="roleDefault1 != null">
        role_default1 = #{roleDefault1,jdbcType=VARCHAR},
      </if>
      <if test="roleDefault2 != null">
        role_default2 = #{roleDefault2,jdbcType=VARCHAR},
      </if>
      <if test="roleIsvaild != null">
        role_isVaild = #{roleIsvaild,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>